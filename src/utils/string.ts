/*
##########################################################################################################################
#                                                       MISCELLANEOUS                                                    #
##########################################################################################################################
*/

// Imports
import type {
  As,
  AsIs,
  ValueOf,
  ToString,
  StringLike,
  StringConcat,
  StringJoin,
  StringSplit,
  ReadonlyInclude
} from './types.js'

/*
##########################################################################################################################
#                                                       MISCELLANEOUS                                                    #
##########################################################################################################################
*/

// String-Join Function
export function join<
  T extends ReadonlyInclude<unknown[]>,
  D extends StringLike
>(arr: T, delim?: D): StringJoin<T, D> {
  const _delimiter = `${delim === null ? ' ' : delim}`
  return arr.join(_delimiter) as StringJoin<T, D>
}

/*
##########################################################################################################################
#                                                       MISCELLANEOUS                                                    #
##########################################################################################################################
*/
